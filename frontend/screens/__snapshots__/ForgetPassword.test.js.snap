// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ForgetPassword Component should render correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      {
        "fontSize": 20,
        "margin": 0,
      }
    }
  >
    FORGOT PASSWORD?
  </Text>
  <Text
    style={
      {
        "color": "#9c9c9c",
        "fontSize": 15,
        "margin": 10,
        "marginBottom": 20,
        "textAlign": "center",
        "width": 250,
      }
    }
  >
    Enter your email address and we'll send you a code to get back into your profile
  </Text>
  <View
    style={
      {
        "width": "70%",
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Email"
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#b5b5b5",
          "borderRadius": 15,
          "borderWidth": 1,
          "fontSize": 15,
          "marginVertical": 15,
          "padding": 10,
          "paddingLeft": 15,
        }
      }
      value=""
    />
  </View>
  <View
    collapsable={false}
    style={
      {
        "backgroundColor": "#900",
        "borderColor": "transparent",
        "borderRadius": 4,
        "borderStyle": "solid",
        "borderWidth": 0,
        "elevation": 0,
        "minWidth": 64,
        "padding": 5,
        "shadowColor": "#000000",
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "width": "70%",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "disabled": false,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "overflow": "hidden",
          },
          {
            "borderRadius": 4,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            [
              {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
              },
              {
                "textAlign": "left",
              },
              [
                {
                  "letterSpacing": 1,
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                undefined,
                {
                  "textTransform": "uppercase",
                },
                {
                  "color": "#fff",
                  "fontFamily": "System",
                  "fontWeight": "500",
                },
                {
                  "fontFamily": "System",
                  "fontWeight": "500",
                },
                undefined,
              ],
            ]
          }
        >
          Send Email
        </Text>
      </View>
    </View>
  </View>
</View>
`;
